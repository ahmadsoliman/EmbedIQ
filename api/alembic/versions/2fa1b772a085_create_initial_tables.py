"""Create initial tables

Revision ID: 2fa1b772a085
Revises: 
Create Date: 2025-04-12 20:12:36.725343

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '2fa1b772a085'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('document',
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('source', sa.String(length=255), nullable=True),
    sa.Column('author', sa.String(length=255), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('doc_metadata', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_document_id'), 'document', ['id'], unique=False)
    op.create_index(op.f('ix_document_source'), 'document', ['source'], unique=False)
    op.create_index(op.f('ix_document_title'), 'document', ['title'], unique=False)
    op.create_table('query_log',
    sa.Column('query_text', sa.Text(), nullable=False),
    sa.Column('user_id', sa.String(length=255), nullable=True),
    sa.Column('response_text', sa.Text(), nullable=True),
    sa.Column('retrieval_latency_ms', sa.Integer(), nullable=True),
    sa.Column('generation_latency_ms', sa.Integer(), nullable=True),
    sa.Column('retrieved_chunk_ids', sa.JSON(), nullable=True),
    sa.Column('relevance_scores', sa.JSON(), nullable=True),
    sa.Column('user_rating', sa.Integer(), nullable=True),
    sa.Column('user_feedback', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_query_log_id'), 'query_log', ['id'], unique=False)
    op.create_index(op.f('ix_query_log_user_id'), 'query_log', ['user_id'], unique=False)
    op.create_table('document_chunk',
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.Column('chunk_index', sa.Integer(), nullable=False),
    sa.Column('chunk_text', sa.Text(), nullable=False),
    sa.Column('embedding', sa.LargeBinary(), nullable=True),
    sa.Column('chunk_metadata', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['document.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_document_chunk_document_id'), 'document_chunk', ['document_id'], unique=False)
    op.create_index(op.f('ix_document_chunk_id'), 'document_chunk', ['id'], unique=False)
    op.drop_table('lightrag_doc_status')
    op.drop_table('lightrag_vdb_relation')
    op.drop_table('lightrag_doc_chunks')
    op.drop_table('lightrag_llm_cache')
    op.drop_table('lightrag_doc_full')
    op.drop_table('lightrag_vdb_entity')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('lightrag_vdb_entity',
    sa.Column('id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('workspace', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('entity_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('content_vector', sa.NullType(), autoincrement=False, nullable=True),
    sa.Column('create_time', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('update_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('chunk_ids', postgresql.ARRAY(sa.VARCHAR(length=255)), autoincrement=False, nullable=True),
    sa.Column('file_path', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('workspace', 'id', name='lightrag_vdb_entity_pk')
    )
    op.create_table('lightrag_doc_full',
    sa.Column('id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('workspace', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('doc_name', sa.VARCHAR(length=1024), autoincrement=False, nullable=True),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('meta', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('create_time', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('update_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('workspace', 'id', name='lightrag_doc_full_pk')
    )
    op.create_table('lightrag_llm_cache',
    sa.Column('workspace', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('mode', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('original_prompt', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('return_value', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('create_time', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('update_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('workspace', 'mode', 'id', name='lightrag_llm_cache_pk')
    )
    op.create_table('lightrag_doc_chunks',
    sa.Column('id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('workspace', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('full_doc_id', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('chunk_order_index', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('tokens', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('content_vector', sa.NullType(), autoincrement=False, nullable=True),
    sa.Column('file_path', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('create_time', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('update_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('workspace', 'id', name='lightrag_doc_chunks_pk')
    )
    op.create_table('lightrag_vdb_relation',
    sa.Column('id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('workspace', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('source_id', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('target_id', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('content_vector', sa.NullType(), autoincrement=False, nullable=True),
    sa.Column('create_time', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('update_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('chunk_ids', postgresql.ARRAY(sa.VARCHAR(length=255)), autoincrement=False, nullable=True),
    sa.Column('file_path', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('workspace', 'id', name='lightrag_vdb_relation_pk')
    )
    op.create_table('lightrag_doc_status',
    sa.Column('workspace', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('content_summary', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('content_length', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('chunks_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('file_path', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('workspace', 'id', name='lightrag_doc_status_pk')
    )
    op.drop_index(op.f('ix_document_chunk_id'), table_name='document_chunk')
    op.drop_index(op.f('ix_document_chunk_document_id'), table_name='document_chunk')
    op.drop_table('document_chunk')
    op.drop_index(op.f('ix_query_log_user_id'), table_name='query_log')
    op.drop_index(op.f('ix_query_log_id'), table_name='query_log')
    op.drop_table('query_log')
    op.drop_index(op.f('ix_document_title'), table_name='document')
    op.drop_index(op.f('ix_document_source'), table_name='document')
    op.drop_index(op.f('ix_document_id'), table_name='document')
    op.drop_table('document')
    # ### end Alembic commands ### 